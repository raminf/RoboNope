# Disabling auto-build workflow on GitHub.
# Runners are system specific and not available for all systems.
# Best to build on target system from source.
# Will revisit in future, if there's demand for it.
#
name: RoboNope Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libsqlite3-dev libpcre3-dev zlib1g-dev libssl-dev perl wget curl nginx-dev
        sudo ln -s /usr/lib/x86_64-linux-gnu/libpcre.so /usr/lib/libpcre.so || true
        # Debug nginx installation
        echo "Nginx dev installation details:"
        dpkg -L nginx-dev || true
        echo "NGINX_INC_PATH=/usr/include/nginx" >> $GITHUB_ENV
        echo "PCRE_LIB_PATH=/usr/lib/x86_64-linux-gnu/libpcre.so" >> $GITHUB_ENV
    
    - name: Build standalone module
      run: |
        echo "Building standalone module..."
        make STANDALONE=1 \
             PCRE_LIB_PATH=/usr/lib/x86_64-linux-gnu/libpcre.so \
             NGINX_INC_PATH=/usr/include/nginx \
             standalone-build
    
    - name: Basic module verification
      run: |
        echo "Verifying module was built..."
        test -f standalone/objs/ngx_http_robonope_module.so || exit 1
        file standalone/objs/ngx_http_robonope_module.so | grep -q 'shared object' || exit 1
        echo "Module verification successful"
    
    - name: Create release package
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        mkdir -p release/module
        cp standalone/objs/ngx_http_robonope_module.so release/module/
        cp -r examples release/
        cp README.md LICENSE release/
        cd release && tar czf ../robonope-module-linux.tar.gz .
    
    - name: Upload release artifact
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: actions/upload-artifact@v4
      with:
        name: robonope-module-linux
        path: robonope-module-linux.tar.gz
        retention-days: 7 