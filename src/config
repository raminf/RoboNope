ngx_addon_name=ngx_http_robonope_module

# Check for DuckDB
if [ -n "$ROBONOPE_USE_DUCKDB" ]; then
    # Check for DuckDB library
    if [ -f "/usr/local/lib/libduckdb.so" ] || [ -f "/usr/lib/libduckdb.so" ] || [ -f "/usr/local/lib/libduckdb.dylib" ]; then
        CORE_LIBS="$CORE_LIBS -lduckdb"
    else
        echo "Error: DuckDB library not found"
        exit 1
    fi
fi

# Check for SQLite3 library
if [ -f "/usr/local/lib/libsqlite3.so" ] || [ -f "/usr/lib/libsqlite3.so" ] || [ -f "/usr/local/lib/libsqlite3.dylib" ]; then
    CORE_LIBS="$CORE_LIBS -lsqlite3"
fi

ngx_module_name=ngx_http_robonope_module
ngx_module_srcs="$ngx_addon_dir/ngx_http_robonope_module.c"

# Set appropriate flags based on database selection
if [ -n "$ROBONOPE_USE_DUCKDB" ]; then
    CFLAGS="$CFLAGS -DROBONOPE_USE_DUCKDB"
else
    CFLAGS="$CFLAGS -DROBONOPE_USE_SQLITE"
fi

if test -n "$ngx_module_link"; then
    ngx_module_type=HTTP
    ngx_module_name=ngx_http_robonope_module
    ngx_module_srcs="$ngx_addon_dir/ngx_http_robonope_module.c"

    if [ -n "$ROBONOPE_USE_DUCKDB" ]; then
        CFLAGS="$CFLAGS -DROBONOPE_USE_DUCKDB"
    else
        CFLAGS="$CFLAGS -DROBONOPE_USE_SQLITE"
    fi

    . auto/module
else
    HTTP_MODULES="$HTTP_MODULES ngx_http_robonope_module"
    NGX_ADDON_SRCS="$NGX_ADDON_SRCS $ngx_addon_dir/ngx_http_robonope_module.c"
fi 